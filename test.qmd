---
title: "Hospitals"
format: html
---

```{r}
#| include: false
library(tidychat)
```

import the hospital data

```{r}
library(readr)

hospitals <- read_csv("data/hospitals.csv")
```
import the county data

```{r}
library(readr)
counties <- read_csv("data/counties.csv")
```

join the hospital and county data

```{r}
library(dplyr)

# join hospitals and counties data frames by fips and state columns
hospital_county <- left_join(hospitals, counties, by = c("fips", "state"))

# view the resulting data frame
hospital_county
```


create a model that predicts the number of hospitals based on the population, use
the counties data frame

Sure, here's the code to view the counties data frame:

```{r}
counties
``` 

This will display the entire counties data frame in the console.

create a model of hospitals vs population

```{r}
library(tidymodels)

# create a recipe for the model
hosp_recipe <- recipe(hospitals ~ population, data = hospital_county) %>%
  step_log(population) %>%
  step_normalize(all_predictors())

# create a linear regression model using parsnip
hosp_model <- linear_reg() %>%
  set_engine("lm") %>%
  set_mode("regression")

# create a workflow to tie the recipe and model together
hosp_wf <- workflow() %>%
  add_recipe(hosp_recipe) %>%
  add_model(hosp_model)

# fit the model to the data
hosp_fit <- hosp_wf %>% fit(data = hospital_county)

# view the model summary
summary(hosp_fit$fit)

# make predictions on new data
new_data <- data.frame(population = c(10000, 50000, 100000))
hosp_pred <- hosp_fit %>% predict(new_data)

# view the predicted hospital counts
hosp_pred$.pred
```


